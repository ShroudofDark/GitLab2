plugins {
	id 'java'
	id "org.xbib.gradle.plugin.git" version "2.0.0"
}

java {
	sourceCompatibility = JavaVersion.toVersion(11)
    targetCompatibility = JavaVersion.toVersion(11)
}

repositories {
	mavenCentral()
	//jcenter() got depreciation warnings use this
}

dependencies {
	testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0'
	testImplementation 'org.hamcrest:hamcrest-library:2.2'
}

test {
	ignoreFailures = true
	useJUnitPlatform()
}

//Report Website Creation stuff

task clonePages() {
    doLast {  
		mkdir 'build/gh-pages'
        def thisRepo = rootProject.projectDir.toString()
        def pagesDir = "$buildDir/gh-pages"
        project.delete {
            delete pagesDir
        }
        def grgit = git.clone {
            dir = pagesDir
            uri = thisRepo //uri = 'file:' + thisRepo
            bare = false
            refToCheckout = 'gh-pages'
        }
        grgit.checkout {
            branch = 'gh-pages'
        }
		grgit.close();
    }
}

task reports (dependsOn: ['javadoc', 'test']){
	description 'Generate reports for this project'
}

task copyDocs (type: Copy, dependsOn: ['reports', 'clonePages']) {
	from "build/docs/"
	into "$buildDir/gh-pages"
}

task copyReports (type: Copy, dependsOn: ['reports', 'clonePages']) {
	from "build/reports/"
	into "$buildDir/gh-pages"
}

task deployReports (dependsOn: ['reports', 'copyDocs', 'copyReports']){
	group = "Reporting"
	description  'Copies reports to the gh-pages branch in preparation for a future push to GitHub'
	doLast {
		def pagesDir = "$buildDir/gh-pages"
		printf pagesDir
		def grgit = git.open {
			dir = pagesDir + "/.git"
		}
		grgit.add (update: false, patterns: ['reports/'])
		grgit.add (update: true, patterns: ['reports/'])
		/*grgit.commit {
			message = "Updating web pages"
		} */
		
		grgit.close();
	}
}

build.dependsOn deployReports